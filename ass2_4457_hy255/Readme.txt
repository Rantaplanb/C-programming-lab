	Λουκάς Μερτζάνης 4457
	Άσκηση 2η - Readme.txt
------------------------------------------------------------------------------------------------------
Q1: Ειναι δυνατο οι ms_copy, ms_ncopy, ms_concat, ms_nconcat να καλεσουν την assert
	και να ελεγξουν αν η μνημη προορισμου οπου γραφεται το αποτελεσμα ειναι αρκετα μεγαλη?

A1: H assert() μπορει να χρησιμοποιηθει για να ελεγχθει αν ο δεικτης που της δινουμε ως ορισμα
	"δειχνει" σε καποιο αντικειμενο ή οχι (NULL pointer). ΔΕΝ μπορει να ελεγξει αν το block μνημης
	προορισμου εχει επαρκες μεγεθος ωστε να πραγματοποιηθουν με ασφαλεια οι εκαστοτε λειτουργειες
	των συναρτησεων μας.

Q2: Ειναι δυνατο οι συναρτησεις ms_ncopy, ms_nconcat, ms_ncompare να καλεσουν την assert και
	να ελεγξουν αν η παραμετρος length εχει αρνητικη τιμη?

A2: Ακολουθησα το προτυπο της βιβλιοθηκης για strings της C (string.h), συνεπως χρησιμοποιησα
	το data type size_t για τις εν λογω παραμετρους. Ο τυπος δεδομενων size_t εξ'ορισμου δεν ειναι 
	ποτε αρνητικος (δηλ. τα bytes μνημης οπου αποθηκευεται μια size_t μεταβλητη ερμηνευονται
	ως unsigned integer), αρα οποιοσδηποτε τετοιος ελεγχος κρινεται αχρειαστος.
------------------------------------------------------------------------------------------------------

	Ακολουθησα πιστα τις προδιαγραφες της εκφωνησης. Η ms_compare που υλοποιησα επιστρεφει την ASCII διαφορα
	των πρωτων διαφορετικων χαρακτηρων στα strings που συγκρινονται, σε αντιθεση με την strcmp η οποια επιστρεφει
	0/1/-1 για ισα/μεγαλυτερο/μικροτερο string επειτα απο την συγκριση. Θεωρω πως ειναι καλυτερα ετσι.
	Με βοηθησε πολυ το manual του λινουξ και σχετικες πληροφοριες απο το web για να κατανοησω τον τροπο λειτουργιας
	των συναρτησεων. Δεν χρησιμοποιησα "ιδιωματικες" εκφρασεις, γιατι θεωρησα πως δεν βελτιωνουν την αναγνωσιμοτητα
	του κωδικα στην ασκηση αυτη. Συνολικος χρονος ενασχολησης ~15-18 ωρες.